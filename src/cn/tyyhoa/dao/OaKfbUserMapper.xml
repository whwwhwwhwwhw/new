<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tyyhoa.dao.OaKfbUserMapper">
	<resultMap id="BaseResultMap" type="cn.tyyhoa.pojo.OaKfbUser">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="stu_id" jdbcType="VARCHAR" property="stu_id" />
		<result column="groupid" jdbcType="INTEGER" property="groupid" />
		<result column="groupname" jdbcType="VARCHAR" property="groupname" />
		<result column="jobid" jdbcType="INTEGER" property="jobid" />
		<result column="sumscore" jdbcType="INTEGER" property="sumscore" />
		<result column="jobname" jdbcType="VARCHAR" property="jobname" />
		<result column="stu_name" jdbcType="VARCHAR" property="stu_name" />
		<result column="E_mail" jdbcType="VARCHAR" property="e_mail" />
		<result column="contact_way" jdbcType="VARCHAR" property="contact_way" />
		<result column="wechat" jdbcType="VARCHAR" property="wechat" />
		<result column="present_address" jdbcType="VARCHAR" property="present_address" />
		<result column="appraise" jdbcType="VARCHAR" property="appraise" />
		<result column="stu_age" jdbcType="INTEGER" property="stu_age" />
		<result column="stu_sex" jdbcType="VARCHAR" property="stu_sex" />
	</resultMap>
	<!-- 请假表根据id查询学生姓名 学号 -->
	<select id="selectByUid" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT oa_kfb_user.id AS uid,
		oa_jzb_student.stu_name AS stu_name,
		oa_jzb_student.contact_way AS contact_way
		FROM
		tyyhoa.oa_kfb_user
		INNER JOIN oa_jzb_student ON oa_jzb_student.stu_number = oa_kfb_user.stu_id
		WHERE oa_kfb_user.id=#{uid }
	</select>

	<!--开发部根据组长id查询小组员工信息 -->
	<select id="selectYgByUid" resultMap="BaseResultMap"
		parameterType="cn.tyyhoa.pojo.OaKfbUser">
		SELECT u.id, u.stu_id, s.stu_name, s.stu_sex,s.stu_age,
		s.present_address, s.E_mail, s.contact_way, s.wechat
		,gr.groupname,j.jobname,appraise
		FROM oa_kfb_user AS u
		INNER JOIN oa_jzb_student AS s ON u.stu_id=s.stu_number
		INNER JOIN oa_jwb_grade AS g ON s.grade_id=g.id
		LEFT JOIN oa_kfb_group AS gr ON u.groupid=gr.id
		INNER JOIN oa_kfb_job AS j ON u.jobid=j.id
		<where>
			<if test="groupid!=null and groupid!=''">
				and u.groupid=#{groupid}
			</if>
			<if test="stu_name!=null and stu_name!=''">
				AND stu_name LIKE CONCAT('%',#{stu_name},'%')
			</if>
		</where>
	</select>
	<!-- 经理开发部查询实训人员 -->
	<select id="selectAll" parameterType="cn.tyyhoa.pojo.OaKfbUser"
		resultMap="BaseResultMap">
		SELECT u.id, u.stu_id, s.stu_name, s.stu_age, s.stu_sex,
		s.present_address, s.E_mail, s.contact_way, s.wechat
		,gr.groupname,j.jobname,appraise
		FROM oa_kfb_user AS u
		INNER JOIN oa_jzb_student AS s ON u.stu_id=s.stu_number
		INNER JOIN oa_jwb_grade AS g ON s.grade_id=g.id
		LEFT JOIN oa_kfb_group AS gr ON u.groupid=gr.id
		INNER JOIN oa_kfb_job AS j ON u.jobid=j.id
		<where>
			AND g.struts=2
			<if test="stu_id!=null ||stu_id!=''">
				AND u.stu_id LIKE CONCAT(#{stu_id},'%')
			</if>
			<if test="stu_name!=null ||stu_name!=''">
				AND s.stu_name LIKE CONCAT('%',#{stu_name},'%')
			</if>
		</where>
	</select>

	<!-- 开发部查询历史实训人员 -->
	<select id="selectHistoryStu" resultMap="BaseResultMap">
		SELECT u.id, u.stu_id, s.stu_name, s.stu_age, s.stu_sex,
		s.present_address, s.E_mail, s.contact_way, s.wechat
		,gr.groupname,j.jobname
		FROM oa_kfb_user AS u
		INNER JOIN oa_jzb_student AS s ON u.stu_id=s.stu_number
		INNER JOIN oa_jwb_grade AS g ON s.grade_id=g.id
		LEFT JOIN oa_kfb_group AS gr ON u.groupid=gr.id
		INNER JOIN oa_kfb_job AS j ON u.jobid=j.id
		<where>
			AND g.struts>2
			<if test="stu_id!=null">AND u.stu_id LIKE CONCAT(#{stu_id},'%')</if>
			<if test="stu_name!=null">AND stu_name LIKE CONCAT('%',#{stu_name},'%')</if>
			<if test="gradeid!=null">AND grade_id=#{gradeid}</if>
			<if test="groupid!=null">AND u.groupid=#{groupid}</if>
		</where>
		ORDER BY groupid
	</select>

	<!-- 根据组长id查询小组组长姓名及小组名称 -->
	<select id="selectUse" parameterType="cn.tyyhoa.pojo.OaKfbUser"
		resultMap="BaseResultMap">
		SELECT groupid,groupname,stu_name,u.id AS id
		FROM oa_kfb_user
		AS u
		INNER JOIN oa_kfb_group AS g ON g.id=u.groupid
		INNER JOIN
		oa_jzb_student AS s ON s.stu_number=u.stu_id
		WHERE u.id=#{id}

	</select>



	<select id="selectByPrimaryKeyTest" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT u.id, u.stu_id, s.stu_name, s.stu_age, s.present_address, s.E_mail,
		s.contact_way, s.wechat ,gr.id AS groupid,gr.groupname,j.id AS jobid
		,j.jobname
		FROM oa_kfb_user AS u
		INNER JOIN oa_jzb_student AS s ON u.stu_id=s.stu_number
		INNER JOIN oa_jwb_grade AS g ON s.grade_id=g.id
		LEFT JOIN oa_kfb_group AS gr ON u.groupid=gr.id
		INNER JOIN oa_kfb_job AS j ON u.jobid=j.id
		where u.stu_id = #{stu_id,jdbcType=VARCHAR}
	</select>



	<!-- 组长查看小组考勤 -->
	<select id="selectAllkq" resultMap="BaseResultMap">
		SELECT
		a.id,a.stu_id,b.stu_name AS stu_name,a.sumscore FROM oa_kfb_user AS a
		INNER JOIN oa_kfb_group AS c ON c.id=a.groupid
		INNER JOIN
		oa_jzb_student AS b ON b.stu_number=a.stu_id
		WHERE c.id=#{groupid}
	</select>


	<!-- 经理查看小组考勤 -->
	<select id="selectjlAllkq" resultMap="BaseResultMap"
		parameterType="cn.tyyhoa.pojo.OaKfbUser">
		SELECT
		a.id,a.stu_id,b.stu_name AS stu_name,a.sumscore FROM oa_kfb_user
		AS a
		INNER JOIN oa_jzb_student AS b ON b.stu_number=a.stu_id
		INNER JOIN
		oa_jwb_grade AS c ON c.id=b.grade_id
		<where>
			and c.struts=2
			<if test="stu_name!=null">
				AND b.stu_name like concat('%',#{stu_name},'%')
			</if>
		</where>
	</select>


	<!-- 查看总分 -->
	<select id="selectallscore" resultMap="BaseResultMap">
		SELECT SUM(score) AS
		sumscore FROM oa_kfb_user AS a
		INNER JOIN oa_kfb_score AS b ON
		a.id=b.user_id
		WHERE b.user_id=#{id}
	</select>






	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, stu_id, groupid, jobid
	</sql>


	<select id="selectByGroup" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		SELECT
		u.id, u.stu_id, u.groupid, u.jobid,s.stu_name as stu_name, g.groupname,
		j.jobname
		FROM oa_kfb_user AS u
		LEFT JOIN oa_jzb_student AS s ON
		s.stu_number=u.stu_id
		LEFT JOIN oa_kfb_group AS g ON g.id=u.groupid
		LEFT
		JOIN oa_kfb_job AS j ON j.id=u.jobid
		where u.groupid =
		#{groupid,jdbcType=INTEGER}
	</select>
	<select id="selectUserNoGroup" resultMap="BaseResultMap">
		SELECT u.id,
		u.stu_id,s.stu_name, u.groupid, u.jobid FROM oa_kfb_user AS u
		INNER
		JOIN oa_jzb_student AS s ON s.stu_number=u.stu_id
		INNER JOIN
		oa_jwb_grade
		AS g ON s.grade_id=g.id
		WHERE g.struts=2 AND u.groupid IS
		NULL
	</select>
	<select id="selectByExample" parameterType="cn.tyyhoa.pojo.OaKfbUserExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from oa_kfb_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from oa_kfb_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		oa_kfb_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="cn.tyyhoa.pojo.OaKfbUserExample">
		delete from oa_kfb_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.tyyhoa.pojo.OaKfbUser">
		insert into oa_kfb_user (id,
		stu_id, groupid,
		jobid)
		values (#{id,jdbcType=INTEGER},
		#{stu_id,jdbcType=VARCHAR},
		#{groupid,jdbcType=INTEGER},
		#{jobid,jdbcType=INTEGER})
	</insert>
	<insert id="InsertUserFromStu">
		INSERT INTO oa_kfb_user(stu_id)
		SELECT stu_number FROM
		oa_jzb_student AS s
		INNER JOIN oa_jwb_grade AS g ON s.grade_id=g.id
		WHERE stu_number NOT
		IN(SELECT stu_id FROM oa_kfb_user) AND g.struts=2

	</insert>
	<insert id="insertSelective" parameterType="cn.tyyhoa.pojo.OaKfbUser">
		insert into oa_kfb_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="stu_id != null">
				stu_id,
			</if>
			<if test="groupid != null">
				groupid,
			</if>
			<if test="jobid != null">
				jobid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="stu_id != null">
				#{stu_id,jdbcType=VARCHAR},
			</if>
			<if test="groupid != null">
				#{groupid,jdbcType=INTEGER},
			</if>
			<if test="jobid != null">
				#{jobid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="cn.tyyhoa.pojo.OaKfbUserExample"
		resultType="java.lang.Long">
		select count(*) from oa_kfb_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update oa_kfb_user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.stu_id != null">
				stu_id = #{record.stu_id,jdbcType=VARCHAR},
			</if>
			<if test="record.groupid != null">
				groupid = #{record.groupid,jdbcType=INTEGER},
			</if>
			<if test="record.jobid != null">
				jobid = #{record.jobid,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update oa_kfb_user
		set id = #{record.id,jdbcType=INTEGER},
		stu_id =
		#{record.stu_id,jdbcType=VARCHAR},
		groupid =
		#{record.groupid,jdbcType=INTEGER},
		jobid =
		#{record.jobid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>



	<!-- 修改职位 -->
	<update id="updateByPrimaryKeySelective" parameterType="cn.tyyhoa.pojo.OaKfbUser">
		update oa_kfb_user
		<set>
			<if test="stu_id != null">
				stu_id = #{stu_id,jdbcType=VARCHAR},
			</if>
			<if test="groupid != null">
				groupid = #{groupid,jdbcType=INTEGER},
			</if>
			<if test="jobid != null">
				jobid = #{jobid,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 移出组员 -->
	<update id="Remove" parameterType="cn.tyyhoa.pojo.OaKfbUser">
		update oa_kfb_user
		<set>
			groupid = #{groupid,jdbcType=INTEGER},
			jobid =
			#{jobid,jdbcType=INTEGER},
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.tyyhoa.pojo.OaKfbUser">
		update oa_kfb_user
		set stu_id = #{stu_id,jdbcType=VARCHAR},
		groupid =
		#{groupid,jdbcType=INTEGER},
		jobid = #{jobid,jdbcType=INTEGER}
		where id
		= #{id,jdbcType=INTEGER}
	</update>
</mapper>